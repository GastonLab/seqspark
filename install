#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long;


my $prefix = $ENV{HOME} . "/seqspark";
my $help = 0;
my $db_dir = '';

if (scalar @ARGV == 0) {&help;}

GetOptions(
	'prefix=s' => \$prefix,
	'db-dir=s' => \$db_dir,
	'h|help!' => \$help
);

sub build {
	my $arch;
	if ($^O eq "linux") {
		$arch = "linux-x86-64";
	} else {
		$arch = $^O;
	}
	my $dir = "src/main/resources/$arch";
	unless (-d $dir) {
		mkdir $dir or die "cannot create dir $dir $!\n";
	}
	!system("gfortran", "-shared", "-O2", "src/main/fortran/mvndstpack.f", "-o", "src/main/resources/$arch/libmvn.so", "-fpic") or die "You don't have gfortran installed?\nFailed to compile dependency library mvndstpack.f: $!\n";
	!system("sbt", "assembly") or die "Failed to build jar: $!\n";
}

sub install {
	open my $fh, "build.sbt" or die "Failed to open build.sbt: $!\n";
	my $jar;	
	my $scalaVersion = "2.11";
	while (<$fh>) {
		chomp;
		if (m/(SeqSpark.*\.jar)/) {
			$jar = $1;
			last;
		}
		if (m/scalaVersion.+?(2\.1[01])\./) {
			$scalaVersion = $1;
		}
	}
	my $target = "target/scala-$scalaVersion/$jar";
	if (! $jar) {
		die "Cannot get the jar file name from build.sbt";
	} elsif (! -f $target) {
		die "Cannot find $target, compiling failed?";
	}
	my $scripts = "bin";
	my $conf = "conf";
	!system("mkdir", "-p", "$prefix/db") or die "Failed to create $prefix/\n";
	!system("cp", $target, $prefix) or die "Failed to copy jar file to $prefix\n/";
	!system("cp", "-r", $conf, $prefix) or die "Failed to copy conf folder to $prefix/\n";
	!system("cp", "-r", $scripts, $prefix) or die "Failed to copy scripts to $prefix/\n";
}

sub download_dbs {
	
	!system("hdfs", "dfs", "-mkdir", "-p", "$db_dir") 
		or die "Cannot create dir $db_dir on HDFS, you need to mannually download databases later\n";
	my @db = qw/refFlat_table refGene_seq dbSNP-138.vcf.bz2/;
	if ($db_dir) {
		print STDERR "going to download refseq and dbsnp to $db_dir\n";
		for my $db (@db) {
			if (!system("hdfs dfs -test -f $db_dir/$db")) {
				print STDERR "database $db already exists, skip downloading\n";
				next;
			}
			!system("curl http://seqspark.dizhang.org/$db | hdfs dfs -appendToFile - $db_dir/$db") 
				or die "Failed to download\n";
		}
		
	} else {
		die "You didn't specify a valid HDFS path\n";
	}
}

sub help {
		print "Usage: ./install [options]
Options:
	--help,-h            Show this help message
	--prefix=[dir]       Set install directory. [~/seqspark]
	--db-dir=[dir]       HDFS path to store the database files. [seqspark]\n";
	exit;
}

sub main {
	print STDERR "Going to install seqspark with the following options:
	--prefix         $prefix
	--db-dir		 $db_dir\n";	
	
	&build;
	&install;
	if ($db_dir) {
		&download_dbs;
	} else {
		print STDERR "No db-dir specified, skip downloading database.\n";
	}
}

&main;

